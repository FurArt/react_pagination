{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","currentPage","perPage","onPageChange","lastPage","Math","ceil","pages","className","classNames","disabled","href","onClick","map","page","active","App","useState","setPage","setPerPage","items","setItems","useEffect","start","end","min","length","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,QACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQE,GAC7BK,EAAQd,EAAW,EAAGW,GAE5B,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA0B,IAAhBT,IAFd,SAKE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAAS,WACa,IAAhBX,GACFE,EAAaF,EAAc,IAPjC,oBAeDM,EAAMM,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAASb,IAHrB,SAME,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACHE,IAASb,GACXE,EAAaW,IANnB,SAUGA,KAfEA,MAoBT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUT,IAAgBG,IAF9B,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBG,EAC/BQ,QAAS,WACHX,IAAgBG,GAClBD,EAAaF,EAAc,IAPjC,wBCEOe,EAlEO,WACpB,MAAwBC,mBAAS,GAAjC,mBAAOH,EAAP,KAAaI,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOf,EAAP,KAAgBiB,EAAhB,KACA,EAA0BF,mBAAmB,IAA7C,mBAAOG,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRD,EACE5B,EAAW,EAAG,IACXoB,KAAI,SAAAhB,GAAC,qBAAYA,SAErB,IAEH,IAAM0B,GAAST,EAAO,GAAKZ,EACrBsB,EAAMnB,KAAKoB,IAAIX,EAAOZ,EAASkB,EAAMM,QACrCC,EAAeP,EAAMQ,MAAML,EAAOC,GAExC,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,mBAC0BS,EAAQ,EADlC,cACyCC,EADzC,eACmDJ,EAAMM,OADzD,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAO5B,EACP6B,SAAU,SAAAC,GACRb,GAAYa,EAAMC,OAAOH,OACzBZ,EAAQ,IAPZ,UAUE,wBAAQY,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOoB,EAAMM,OACbzB,YAAaa,EACbZ,QAASA,EACTC,aAAce,IAGhB,6BACGS,EAAad,KAAI,SAAAsB,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC3DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a52d330c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  currentPage,\n  perPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const pages = getNumbers(1, lastPage);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              if (page !== currentPage) {\n                onPageChange(page);\n              }\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === lastPage,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={() => {\n            if (currentPage !== lastPage) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const [items, setItems] = useState<string[]>([]);\n\n  useEffect(() => {\n    setItems(\n      getNumbers(1, 42)\n        .map(n => `Item ${n}`),\n    );\n  }, []);\n\n  const start = (page - 1) * perPage;\n  const end = Math.min(page * perPage, items.length);\n  const visibleItems = items.slice(start, end);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${start + 1} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              setPerPage(+event.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        currentPage={page}\n        perPage={perPage}\n        onPageChange={setPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}